[{"/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/index.js":"1","/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/App.js":"2","/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/MainPage.js":"3","/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/BookShelf.js":"4","/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/Book.js":"5","/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/BooksAPI.js":"6","/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/SearchPage.js":"7","/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/BooksPage.js":"8"},{"size":219,"mtime":1654229788000,"results":"9","hashOfConfig":"10"},{"size":2070,"mtime":1659178226962,"results":"11","hashOfConfig":"10"},{"size":656,"mtime":1658998186219,"results":"12","hashOfConfig":"10"},{"size":504,"mtime":1658998165482,"results":"13","hashOfConfig":"10"},{"size":1434,"mtime":1659180836192,"results":"14","hashOfConfig":"10"},{"size":1055,"mtime":1654229788000,"results":"15","hashOfConfig":"10"},{"size":1304,"mtime":1659179799597,"results":"16","hashOfConfig":"10"},{"size":595,"mtime":1659177438744,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"rp8335",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/index.js",[],["37","38"],"/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/App.js",["39"],"import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport SearchPage from \"./Components/SearchPage\";\nimport BooksPage from \"./Components/BooksPage\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  const [showSearchPage, setShowSearchPage] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchedBooks, setSearchedBooks] = useState([]);\n\n  const changeShelf = (book, desiredShelf) => {\n    const searchedBooks = books.map((b) => {\n      if (b.id === book.id) {\n        book.shelf = desiredShelf;\n        return book;\n      }\n      return b;\n    });\n    setBooks(searchedBooks);\n    BooksAPI.update(book, desiredShelf);\n  };\n\n  useEffect(() => {\n    BooksAPI.getAll().then((res) => {\n      setBooks(res);\n    });\n  }, []);\n\n  useEffect(() => {\n    let isActive = true;\n    if (search) {\n      BooksAPI.search(search).then((res) => {\n        if (!res.error && isActive) {\n          // console.log(books);\n          // assignShelf(res);\n          setSearchedBooks(res);\n        } else {\n          setSearchedBooks([]);\n        }\n      });\n    }\n    return () => {\n      isActive = false;\n      setSearchedBooks([]);\n    };\n  }, [search]);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Routes>\n          <Route\n            exact\n            path=\"/search\"\n            element={\n              <SearchPage\n                books={books}\n                changeShelf={changeShelf}\n                search={search}\n                setSearch={setSearch}\n                searchedBooks={searchedBooks}\n              />\n            }\n          />\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <BooksPage\n                changeShelf={changeShelf}\n                setShowSearchPage={setShowSearchPage}\n                books={books}\n              />\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\nexport default App;\n","/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/MainPage.js",[],"/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/BookShelf.js",[],"/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/Book.js",["40"],"/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/BooksAPI.js",[],"/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/SearchPage.js",["41"],"import React from \"react\";\nimport Book from \"./Book\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchPage = ({\n  changeShelf,\n  search,\n  setSearch,\n  searchedBooks,\n  books,\n}) => {\n  searchedBooks.filter((currentBook) => {\n    books.forEach((b) => {\n      if (b.id === currentBook.id) {\n        currentBook.shelf = b.shelf;\n        console.log(currentBook);\n        return currentBook;\n      } else if (typeof currentBook.shelf === \"undefined\") {\n        currentBook.shelf = \"none\";\n        return currentBook;\n      }\n    });\n  });\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link to=\"/\" className=\"close-search\">\n          Close\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            value={search}\n            onChange={(event) => setSearch(event.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          {searchedBooks.map((b) => (\n            <li key={b.id}>\n              <Book book={b} changeShelf={changeShelf} />\n            </li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","/Users/omarelkordy/Udacity Courses/React/Kordy-MyReadsApp/src/Components/BooksPage.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":9,"column":10,"nodeType":"48","messageId":"49","endLine":9,"endColumn":24},{"ruleId":"46","severity":1,"message":"50","line":5,"column":10,"nodeType":"48","messageId":"49","endLine":5,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":12,"column":38,"nodeType":"53","messageId":"54","endLine":12,"endColumn":40},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'showSearchPage' is assigned a value but never used.","Identifier","unusedVar","'prevBooks' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]